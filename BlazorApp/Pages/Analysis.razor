@page "/Analysis"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http

<PageTitle>Analysis</PageTitle>

<h1>Analysis</h1>

<RadzenButton Click=@getAuthorAnalysis Text="Author Analysis" />
<RadzenButton Click=@getFrequencyAnalysis Text="Frequency Analysis" />

@if (isItAuthor == true)
{
    @foreach (var author in authorAnalysis)
    {
        <p>@author.author</p>
        @foreach (var freq in @author.frequencies)
        {
            <p>@freq.frequency commits at @freq.date.ToString("MMMM dd, yyyy")</p>
        }
    }
}

@if (isItFrequency == true)
{
    <RadzenChart>
        <RadzenAreaSeries Smooth=true Data="@frequencyAnalysis" CategoryProperty="date" ValueProperty="frequency"
        RenderingOrder="1">
        </RadzenAreaSeries>
    </RadzenChart>

    @foreach (var freq in @frequencyAnalysis)
    {
        <p>@freq.frequency commits on @freq.date.ToString("MMMM dd, yyyy")</p>
    }
}


@code {
    private AuthorDTO[] authorAnalysis = new AuthorDTO[] { };
    private FrequencyDTO[] frequencyAnalysis = new FrequencyDTO[] { };

    bool isItAuthor;
    bool isItFrequency;

    protected async Task getAuthorAnalysis()
    {
        isItAuthor = true;
        isItFrequency = false;

        authorAnalysis = await Http.GetFromJsonAsync<AuthorDTO[]>("https://localhost:7024/analysis/Mlth/BDSAProject/author");
    }

    protected async Task getFrequencyAnalysis()
    {
        isItFrequency = true;
        isItAuthor = false;

        frequencyAnalysis = await
        Http.GetFromJsonAsync<FrequencyDTO[]>("https://localhost:7024/analysis/Mlth/BDSAProject/frequency");
    }

    public class AuthorDTO
    {
        public string author { get; set; }
        public List<FrequencyDTO> frequencies { get; set; } = new List<FrequencyDTO>();
    }

    public class FrequencyDTO
    {
        public int frequency { get; set; }
        public DateTime date { get; set; }
    }
}